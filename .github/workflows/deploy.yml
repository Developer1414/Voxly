name: Flutter Web CI/CD

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Проверка кода (Checkout)
        uses: actions/checkout@v4

      - name: 2. Настройка Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'beta'

      - name: 3. Получение зависимостей
        # Запускаем pub get в папке проекта Flutter
        run: flutter pub get
        working-directory: ./voxly_frontend

      - name: 4. Сборка Flutter Web
        # Папка build/web будет создана внутри voxly_frontend.
        run: flutter build web --release
        working-directory: ./voxly_frontend
          
      - name: 5. Развертывание на VPS Selectel по SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          
          # Команда, которая выполняется на вашем VPS
          script: |
            # 1. Создаем папку для фронтенда, если ее нет
            mkdir -p /var/www/voxly_frontend
            
            # 2. Очищаем старую сборку (важно для чистой установки)
            find /var/www/voxly_frontend -mindepth 1 -delete
            
            # --- START COPY LOGIC ---
            # ИСХОДНЫЙ ПУТЬ: Путь к папке, которую Flutter создал в runner'е
            BUILD_SOURCE_DIR="${{ github.workspace }}/voxly_frontend/build/web/"
            # Целевой путь на VPS
            DEPLOY_TARGET_DIR="/var/www/voxly_frontend"
            
            # ДИАГНОСТИКА: Убедимся, что файлы существуют перед rsync
            echo "--- Diagnostics ---"
            echo "Listing files in source directory: $BUILD_SOURCE_DIR"
            ls -al "$BUILD_SOURCE_DIR"
            echo "-------------------"
            
            # 4. Копируем собранные файлы
            # КОПИРОВАНИЕ: Копируем содержимое $BUILD_SOURCE_DIR в $DEPLOY_TARGET_DIR
            # Флаг --delete удаляет файлы на VPS, которых нет в локальной сборке.
            rsync -avz --delete "$BUILD_SOURCE_DIR" "$DEPLOY_TARGET_DIR"
            
            # 5. Перезапускаем HTTP-сервер только после успешного копирования
            echo "Restarting http-server..."
            pm2 reload voxly-frontend || pm2 start http-server --name "voxly-frontend" -- "$DEPLOY_TARGET_DIR" -p 8080
            
            # 6. Сохраняем состояние PM2 на всякий случай
            pm2 save
